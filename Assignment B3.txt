Assignment B3
MongoDB
Map reduce operation with suitable example using MongoDB.

Create an orders collection with fields customer id, order date, status, price and 
items, quantity. Execute following queries using mapreduce. Perform map reduce 
operation on orders collection . Perform following queries using map reduce.


db.orders.insertMany([
  {
    customer_id: "C001",
    order_date: ISODate("2023-01-20T10:30:00Z"),
    status: "P",
    price: 100,
    items: ["Item1", "Item2"],
    quantity: [2, 3]},
  {customer_id: "C002",
    order_date: ISODate("2023-01-21T12:45:00Z"),
    status: "D",
    price: 150,
    items: ["Item2", "Item3"],
    quantity: [1, 4]},
  {customer_id: "C001",
    order_date: ISODate("2023-01-22T08:15:00Z"),
    status: "P",
    price: 120,
    items: ["Item1", "Item3"],
    quantity: [2, 2]
  }
]);

db.orders.find()


1.Display total price per customer. 
db.orders.aggregate([ { $group: { _id: "$customer_id", total_price:{ $sum:"$price" } } }] )

2.Display total price per customer having status= D
db.orders.aggregate([
  {
    $match: {
      status: "D"
    }
  },
  {
    $group: {
      _id: "$customer_id",
      total_price: { $sum: "$price" }
    }
  }
])



3.Display total price for Status =P
db.orders.aggregate([
  {
    $match: {
      status: "P"
    }
  },
  {
    $group: {
      _id: "$customer_id",
      total_price: { $sum: "$price" }
    }
  }
])


4.Finding count of all keys in orders collection
db.orders.aggregate([
  {
    $group: {
      _id: null,
      count: { $sum: 1 },
      unique_customer_ids: { $addToSet: "$customer_id" },
      unique_order_dates: { $addToSet: "$order_date" },
      unique_statuses: { $addToSet: "$status" },
    }
  },
  {
    $project: {
      _id: 0,
      count: 1,
      unique_customer_ids: { $size: "$unique_customer_ids" },
      unique_order_dates: { $size: "$unique_order_dates" },
      unique_statuses: { $size: "$unique_statuses" },
    }
  }
])

==================Deprecated==============================
1.
var map=function(){emit(this.Cust_id,this.Amt);}
var red=function(keys,values){return Array.sum(values);} 
db.orders.mapReduce(map,red,{'out':'neworders'}) 
db.neworders.find().pretty()

2.
db.orders.mapReduce(map,red,{'query':{Status:'D'},'out':'new1'}) 
db.new1.find().pretty()

3.
db.orders.mapReduce(map,red,{'query':{Status:'P'},'out':'new2'}) 
db.new2.find().pretty() 

4.
db.orders.mapReduce(map1,red1,{'out':'new3'}) 
{ 
"result" : "new3", 
"timeMillis" : 356, 
"counts" : { 
"input" : 6, 
"emit" : 62, 
"reduce" : 11, 
"output" : 11 
}, 
"ok" : 1 
} 
===========================================================
